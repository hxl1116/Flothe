{"version":3,"sources":["components/Item.js","components/Section.js","components/MenuItem.js","components/Sidebar.js","components/Calendar.js","components/TodayItem.js","components/TimeBlock.js","components/Today.js","components/App.js","index.js"],"names":["Item","props","toggleEditMode","setState","editMode","state","toggleScheduleMode","scheduleMode","toggleOptionsGroup","showOptions","setTimeout","updateSelf","title","document","querySelector","section","desc","updateItem","idx","value","deleteSelf","deleteItem","scheduleSelf","startTime","endTime","location","scheduleItem","month","Date","getMonth","day","getDate","start","end","optionsGroup","className","this","onClick","type","id","placeholder","Component","Section","toggleInputMode","inputMode","addItem","update","transferTaskToEvent","sectionHeader","name","style","fontSize","sectionForm","sectionList","Object","values","items","map","val","key","MenuItem","members","sideMenuItems","Sidebar","toggleSideMenu","showSideMenu","addTeam","querySelectorAll","filter","element","console","log","teams","concat","inputGroup","required","showTeamInputGroup","months","days","getFullYear","Calendar","incrementMonth","currentMonth","decrementMonth","selectDay","date","calendarHeader","currentDay","push","monthView","TodayItem","toggleDesc","showDesc","selected","TimeBlock","time","item","times","Today","loc","App","data","calendarEvents","todoTasks","goalItems","motivationItems","happinessItems","jdx","task","render","getElementById"],"mappings":"sKAoKeA,E,YAhKX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAUVC,eAAiB,WACb,EAAKC,SAAS,CACVC,UAAW,EAAKC,MAAMD,YAbX,EAiBnBE,mBAAqB,WACjB,EAAKH,SAAS,CACVI,cAAe,EAAKF,MAAME,gBAnBf,EAuBnBC,mBAAqB,WACjB,EAAKL,SAAS,CACVM,aAAc,EAAKJ,MAAMI,cAG7BC,YAAW,WACP,EAAKP,SAAS,CACVM,aAAa,MAElB,MAhCY,EAmCnBE,WAAa,WACT,IAAIC,EAAQC,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,gBACRC,EAAOH,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,eAEX,EAAKd,MAAMgB,WAAW,EAAKhB,MAAMiB,IAAK,CAClCN,MAAQA,EAAMO,OAAS,EAAKlB,MAAMW,MAClCI,KAAOA,EAAKG,OAAS,EAAKlB,MAAMe,QAzCrB,EA6CnBI,WAAa,WACT,EAAKnB,MAAMoB,WAAW,EAAKpB,MAAMiB,MA9ClB,EAiDnBI,aAAe,WACX,IAAIC,EAAYV,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,qBACZS,EAAUX,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,mBACVU,EAAWZ,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,cAES,KAApBQ,EAAUJ,OAAkC,KAAlBK,EAAQL,OAAmC,KAAnBM,EAASN,QAC3D,EAAKlB,MAAMyB,aAAa,EAAKzB,MAAMiB,IAAK,CACpCO,SAAUA,EAASN,MACnBQ,OAAO,IAAIC,MAAOC,WAClBC,KAAK,IAAIF,MAAOG,UAChBC,MAAOT,EAAUJ,MACjBc,IAAKT,EAAQL,QAGjB,EAAKC,eA7DT,EAAKf,MAAQ,CACTD,UAAU,EACVG,cAAc,EAEdE,aAAa,GANF,E,sEAmET,IAAD,OACCyB,EACF,yBAAKC,UAAU,iBACVC,KAAK/B,MAAMI,YACR,oCACI,uBAAG0B,UAAU,iBAAiBE,QAAS,WAC/B,EAAKhC,MAAME,cAAc,EAAKD,qBAClC,EAAKJ,iBACL,EAAKM,uBAHT,UAKwB,SAAvB4B,KAAKnC,MAAMc,QACR,uBAAGoB,UAAU,iBAAiBE,QAAS,WAC/B,EAAKhC,MAAMD,UAAU,EAAKF,iBAC9B,EAAKI,qBACL,EAAKE,uBAHT,kBAIwB,qCAE5B,uBAAG2B,UAAU,iBAAiBE,QAAS,WACnC,EAAKjB,aACL,EAAKZ,uBAFT,WAMJ,oCACI,uBAAG2B,UAAU,iBAAiBE,QAASD,KAAK5B,oBAA5C,eAMhB,OACI,oCACI,wBAAI2B,UAAU,cACRC,KAAK/B,MAAMD,UAAagC,KAAK/B,MAAME,aAEhC,qCADD,4BAAK6B,KAAKnC,MAAMW,OAEnBwB,KAAK/B,MAAMD,SACR,2BAAOkC,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMc,QAAhB,eAAsCoB,UAAU,mBAC9DK,YAAY,UAClB,qCACJJ,KAAK/B,MAAME,aACR,2BAAO+B,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMc,QAAhB,oBAA2CoB,UAAU,mBACnEK,YAAY,eAClB,qCACL,yBAAKL,UAAU,gBACTC,KAAK/B,MAAMD,UAAagC,KAAK/B,MAAME,aAEhC,qCADD,2BAAI6B,KAAKnC,MAAMe,MAElBoB,KAAK/B,MAAMD,SACR,2BAAOkC,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMc,QAAhB,cAAqCoB,UAAU,kBAC7DK,YAAY,gBAClB,qCACJJ,KAAK/B,MAAME,aACR,oCACI,2BAAO+B,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMc,QAAhB,kBACdoB,UAAU,kBACVK,YAAY,aACnB,2BAAOF,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMc,QAAhB,aAAoCoB,UAAU,kBAC5DK,YAAY,cAEtB,sCAERJ,KAAK/B,MAAMD,SACR,4BAAQiC,QAAS,WACb,EAAK1B,aACL,EAAKT,mBAFT,QAIC,qCACJkC,KAAK/B,MAAME,aACR,4BAAQ8B,QAAS,WACb,EAAKf,eACL,EAAKhB,uBAFT,YAIC,qCACJ4B,Q,GA9IFO,aCsGJC,E,YApGX,WAAYzC,GAAQ,IAAD,8BACf,4CAAMA,KAMV0C,gBAAkB,WACd,EAAKxC,SAAS,CACVyC,WAAY,EAAKvC,MAAMuC,aATZ,EAanBC,QAAU,WACN,IAAIjC,EAAQC,SAASC,cAAT,WAA2B,EAAKb,MAAMsC,GAAtC,iBACRvB,EAAOH,SAASC,cAAT,WAA2B,EAAKb,MAAMsC,GAAtC,gBACS,KAAhB3B,EAAMO,OAAc,EAAKlB,MAAM4C,QAAQ,CACvCjC,MAAOA,EAAMO,MACbH,KAAMA,EAAKG,MACXW,KAAK,IAAIF,MAAOG,UAChBJ,OAAO,IAAIC,MAAOC,cApBP,EAwBnBZ,WAAa,SAACC,EAAK4B,GACf,EAAK7C,MAAMgB,WAAWC,EAAK4B,IAzBZ,EA4BnBzB,WAAa,SAACH,GACV,EAAKjB,MAAMoB,WAAWH,IA7BP,EAgCnBQ,aAAe,SAACR,EAAK4B,GACjB,EAAK7C,MAAM8C,oBAAoB7B,EAAK4B,IA/BpC,EAAKzC,MAAQ,CACTuC,WAAW,GAHA,E,sEAoCT,IAAD,OACCI,EACF,yBAAKb,UAAU,kBACX,4BAAKC,KAAKnC,MAAMgD,MAChB,uBAAGd,UAAU,iBAAiBe,MAAO,CAACC,SAAU,IAAKd,QAASD,KAAKO,iBAC9DP,KAAK/B,MAAMuC,UAAY,SAAW,QAKzCQ,EACF,yBAAKjB,UAAU,uBACX,2BAAOG,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,gBAAkCJ,UAAU,mBAC1DK,YAAY,yBACnB,2BAAOF,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,eAAiCJ,UAAU,kBACzDK,YAAY,+BACnB,4BAAQH,QAAS,WACb,EAAKQ,UACL,EAAKF,oBAFT,QASFU,EACF,wBAAId,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,iBAAmCJ,UAAU,gBAC9CC,KAAK/B,MAAMuC,UAAYQ,EAAc,qCACrCE,OAAOC,OAAOnB,KAAKnC,MAAMuD,OAAOC,KAAI,SAACC,EAAKxC,GAAN,OACjC,kBAAC,EAAD,CAAMyC,IAAG,UAAK,EAAK1D,MAAMsC,GAAhB,iBAA2BrB,GAC9BH,QAAS,EAAKd,MAAMsC,GACpBrB,IAAKA,EACLN,MAAO8C,EAAI9C,MACXI,KAAM0C,EAAI1C,KACVgB,MAAO0B,EAAI1B,MACXC,IAAKyB,EAAIzB,IACThB,WAAY,SAACC,EAAK4B,GAAN,OAAiB,EAAK7B,WAAWC,EAAK4B,IAClDzB,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAWH,IACrCQ,aAAc,SAACR,EAAK4B,GAAN,OAAiB,EAAKpB,aAAaR,EAAK4B,UAMxE,OACI,yBAAKP,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,YAA8BJ,UAAU,qBAC1Ca,EACAK,O,GApFKZ,aCuBPmB,E,YAvBX,WAAY3D,GAAQ,IAAD,8BACf,4CAAMA,KACDI,MAAQ,GAFE,E,sEAMf,OACI,wBAAI8B,UAAU,mBACV,4BAAKC,KAAKnC,MAAMgD,MACfK,OAAOC,OAAOnB,KAAKnC,MAAM4D,SAASJ,KAAI,SAAAC,GAAG,OACtC,2BAAIA,W,GAXDjB,aCAjBqB,EAAgB,CAAC,UAAW,YAqGnBC,E,YA7FX,WAAY9D,GAAQ,IAAD,8BACf,4CAAMA,KAUV+D,eAAiB,WACb,EAAK7D,SAAS,CACV8D,cAAe,EAAK5D,MAAM4D,gBAbf,EAiBnBtB,gBAAkB,WACd,EAAKxC,SAAS,CACVyC,WAAY,EAAKvC,MAAMuC,aAnBZ,EAuBnBsB,QAAU,WACN,IAAIjB,EAAOpC,SAASC,cAAc,oBAC9B+C,EAAUhD,SAASsD,iBAAiB,uBAGxCN,EAAUP,OAAOC,OAAOM,GAASO,QAAO,SAAAC,GAAO,MAAsB,KAAlBA,EAAQlD,SAE3DmD,QAAQC,IAAIV,GAEO,KAAfZ,EAAK9B,OAEL,EAAKhB,SAAS,CACVqE,MAAO,EAAKnE,MAAMmE,MAAMC,OAAO,CAC3BxB,KAAMA,EAAK9B,MACX0C,QAASP,OAAOC,OAAOM,GAASJ,KAAI,SAAAY,GAAO,OAAIA,EAAQlD,cAnCnE,EAAKd,MAAQ,CACT4D,cAAc,EACdrB,WAAW,EACX4B,MAAO,IALI,E,sEA2CT,IACUvB,EADX,OAUCyB,EACF,yBAAKnC,GAAG,mBAAmBJ,UAAU,eACjC,2BAAOG,KAAK,OAAOC,GAAG,kBAAkBC,YAAY,YAAYmC,UAAU,IAC1E,6CACA,2BAAOrC,KAAK,QAAQC,GAAG,qBAAqBC,YAAY,aACxD,2BAAOF,KAAK,QAAQC,GAAG,qBAAqBC,YAAY,aACxD,2BAAOF,KAAK,QAAQC,GAAG,qBAAqBC,YAAY,aACxD,2BAAOF,KAAK,QAAQC,GAAG,qBAAqBC,YAAY,aACxD,4BAAQH,QAAS,WACb,EAAK6B,UACL,EAAKvB,oBAFT,WAQR,OACI,kBAAC,WAAD,KACI,uBAAGJ,GAAG,gBAAgBJ,UAAU,iBAAiBE,QAASD,KAAK4B,gBAA/D,UACA,yBAAKzB,GAAG,WAAWJ,UAAWC,KAAK/B,MAAM4D,aAAe,OAAS,QAC7D,wBAAI1B,GAAG,aACH,yBAAKA,GAAG,gBACR,yBAAKA,GAAG,iBA/BRU,EAgCY,QA/BxB,yBAAKd,UAAU,kBACX,4BAAKc,GACL,uBAAGd,UAAU,iBAAiBE,QAAS,EAAKM,iBACvC,EAAKtC,MAAMuE,mBAAqB,SAAW,SA6BnCxC,KAAK/B,MAAMuC,UAAa8B,EACrB,4BACKtC,KAAK/B,MAAMmE,MAAMf,KAAI,SAACC,EAAKxC,GAAN,OAClB,kBAAC,EAAD,CAAUyC,IAAG,eAAUzC,GAAOA,IAAKA,EAAK+B,KAAMS,EAAIT,KAAMY,QAASH,EAAIG,eAKpFC,EAAcL,KAAI,SAAAC,GAAG,OAAK,wBAAIC,IAAG,UAAKD,EAAL,oBAA2B,4BAAKA,c,GAtFpEjB,aCPhBoC,EAAS,CACX,CACI5B,KAAM,UACN6B,KAAM,IAEV,CACI7B,KAAM,WACN6B,MAAM,IAAIlD,MAAOmD,cAAgB,IAAM,EAAI,GAAK,IAEpD,CACI9B,KAAM,QACN6B,KAAM,IAEV,CACI7B,KAAM,QACN6B,KAAM,IAEV,CACI7B,KAAM,MACN6B,KAAM,IAEV,CACI7B,KAAM,OACN6B,KAAM,IAEV,CACI7B,KAAM,OACN6B,KAAM,IAEV,CACI7B,KAAM,SACN6B,KAAM,IAEV,CACI7B,KAAM,YACN6B,KAAM,IAEV,CACI7B,KAAM,UACN6B,KAAM,IAEV,CACI7B,KAAM,WACN6B,KAAM,IAEV,CACI7B,KAAM,WACN6B,KAAM,KAyECE,E,YApEX,WAAY/E,GAAQ,IAAD,8BACf,4CAAMA,KAMVgF,eAAiB,WACb,EAAK9E,SAAS,CACV+E,aAA0C,KAA5B,EAAK7E,MAAM6E,aAAsB,EAAI,EAAK7E,MAAM6E,aAAe,KATlE,EAanBC,eAAiB,WACb,EAAKhF,SAAS,CACV+E,aAA0C,IAA5B,EAAK7E,MAAM6E,aAAqB,GAAK,EAAK7E,MAAM6E,aAAe,KAflE,EAmBnBE,UAAY,SAACC,GACT,EAAKpF,MAAMmF,UAAUC,IAlBrB,EAAKhF,MAAQ,CACT6E,cAAc,IAAItD,MAAOC,YAHd,E,sEA0Cf,IAnBM,IAAD,OACCiD,EAAO,GAEPQ,EACF,yBAAK/C,GAAG,kBAAkBJ,UAAU,kBAChC,uBAAGA,UAAU,iBAAiBE,QAASD,KAAK+C,gBAA5C,gBACA,4BAAKN,EAAOzC,KAAK/B,MAAM6E,cAAcjC,MACrC,uBAAGd,UAAU,iBAAiBE,QAASD,KAAK6C,gBAA5C,kBAIFnD,EAAM,SAACuD,GAAD,OACR,yBAAK1B,IAAG,cAAS0B,GAAQ9C,GAAE,cAAS8C,GAC/BlD,UAAS,uBAAkB,EAAKlC,MAAMsF,aAAeF,EAAO,WAAa,IACzEhD,QAAS,kBAAM,EAAK+C,UAAUC,KAC/B,2BAAIA,KAIHnE,EAAM,EAAGA,GAAO2D,EAAOzC,KAAK/B,MAAM6E,cAAcJ,KAAM5D,IAC3D4D,EAAKU,KAAK1D,EAAIZ,IAGlB,IAAMuE,EACF,yBAAKlD,GAAG,cACHuC,GAIT,OACI,yBAAKvC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,YAA8BJ,UAAU,qBAC1CmD,EACAG,O,GAxDMhD,aCfRiD,E,YAnCX,WAAYzF,GAAQ,IAAD,8BACf,4CAAMA,KAOV0F,WAAa,WACT,EAAKxF,SAAS,CACVyF,UAAW,EAAKvF,MAAMuF,YAR1B,EAAKvF,MAAQ,CACTwF,UAAU,EACVD,UAAU,GAJC,E,sEAef,OACI,wBAAIzD,UAAU,oBACV,4BAAKC,KAAKnC,MAAMW,OAChB,uBAAGyB,QAASD,KAAKuD,YAAavD,KAAK/B,MAAMuF,SAAWxD,KAAKnC,MAAMe,KAAOoB,KAAKnC,MAAMwB,e,GAnBzEgB,aCkCTqD,E,YAhCX,WAAY7F,GAAQ,qEACVA,I,sEAGA,IAAD,OACL,OACI,yBAAKkC,UAAU,oBACX,uBAAGA,UAAU,mBAAmBC,KAAKnC,MAAM8F,MAC3C,yBAAK5D,UAAU,2BACVC,KAAKnC,MAAMuD,MAAMC,KAAI,SAAAuC,GAAI,OAAIA,EAAKhE,QAAU,EAAK/B,MAAM8F,KACpD,kBAAC,EAAD,CAAW7E,IAAK,EAAKjB,MAAMiB,IAChBN,MAAOoF,EAAKpF,MACZI,KAAMgF,EAAKhF,KACXS,SAAUuE,EAAKvE,SACfE,MAAOqE,EAAKrE,MACZG,IAAKkE,EAAKlE,IACVE,MAAOgE,EAAKhE,MACZC,IAAK+D,EAAK/D,MAEpB,8C,GApBDQ,aCClBwD,EAAQ,CACV,OACA,OACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,SA6FWC,E,YAzFX,WAAYjG,GAAQ,IAAD,8BACf,4CAAMA,KAMV0C,gBAAkB,WACd,EAAKxC,SAAS,CACVyC,WAAY,EAAKvC,MAAMuC,aATZ,EAanBC,QAAU,WACN,IAAIjC,EAAQC,SAASC,cAAT,WAA2B,EAAKb,MAAMsC,GAAtC,iBACRvB,EAAOH,SAASC,cAAT,WAA2B,EAAKb,MAAMsC,GAAtC,gBACP4D,EAAMtF,SAASC,cAAT,WAA2B,EAAKb,MAAMsC,GAAtC,eACNP,EAAQnB,SAASC,cAAT,WAA2B,EAAKb,MAAMsC,GAAtC,iBACRN,EAAMpB,SAASC,cAAT,WAA2B,EAAKb,MAAMsC,GAAtC,eAEU,KAAhB3B,EAAMO,OAAc,EAAKlB,MAAM4C,QAAQ,CACvCjC,MAAOA,EAAMO,MACbH,KAAMA,EAAKG,MACXM,SAAU0E,EAAIhF,MACda,MAAOA,EAAMb,MACbc,IAAKA,EAAId,MACTW,KAAK,IAAIF,MAAOG,UAChBJ,OAAO,IAAIC,MAAOC,cAzBtB,EAAKxB,MAAQ,CACTuC,WAAW,GAHA,E,sEA+BT,IAAD,OACCI,EACF,yBAAKb,UAAU,kBACX,4BAAKC,KAAKnC,MAAMgD,MAChB,uBAAGd,UAAU,iBAAiBE,QAASD,KAAKO,iBACvCP,KAAK/B,MAAMuC,UAAY,SAAW,QAKzCQ,EACF,yBAAKjB,UAAU,uBACX,2BAAOG,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,gBAAkCJ,UAAU,mBAC1DK,YAAY,UACnB,2BAAOF,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,eAAiCJ,UAAU,kBACzDK,YAAY,gBACnB,2BAAOF,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,cAAgCJ,UAAU,kBACxDK,YAAY,aACnB,2BAAOF,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,gBAAkCJ,UAAU,kBAC1DK,YAAY,eACnB,2BAAOF,KAAK,OAAOC,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,cAAgCJ,UAAU,kBACxDK,YAAY,aACnB,4BAAQH,QAAS,WACb,EAAKQ,UACL,EAAKF,oBAFT,QASR,OACI,yBAAKJ,GAAE,UAAKH,KAAKnC,MAAMsC,GAAhB,YAA8BJ,UAAU,qBAC1Ca,EACAZ,KAAK/B,MAAMuC,UAAYQ,EACpB,yBAAKb,GAAG,mBACH0D,EAAMxC,KACH,SAACsC,EAAM7E,GAAP,OAAe,kBAAC,EAAD,CAAWA,IAAKA,EAAK6E,KAAMA,EAAMvC,MAC5C,EAAKvD,MAAMuD,MAAMY,QACb,SAAA4B,GAAI,OAAIA,EAAKhE,QAAU+D,GAAQC,EAAKlE,MAAQ,EAAK7B,MAAMsF,yB,GAvEvE9C,aCuLL2D,E,YAtLX,WAAYnG,GAAQ,IAAD,8BACf,4CAAMA,KAeV4C,QAAU,SAACN,EAAI8D,GACX,OAAQ9D,GACJ,IAAK,WACD,EAAKpC,SAAS,CACVmG,eAAgB,EAAKjG,MAAMiG,eAAe7B,OAAO4B,KAErD,MACJ,IAAK,OACD,EAAKlG,SAAS,CACVoG,UAAW,EAAKlG,MAAMkG,UAAU9B,OAAO4B,KAE3C,MACJ,IAAK,OACD,EAAKlG,SAAS,CACVqG,UAAW,EAAKnG,MAAMmG,UAAU/B,OAAO4B,KAE3C,MACJ,IAAK,aACD,EAAKlG,SAAS,CACVsG,gBAAiB,EAAKpG,MAAMoG,gBAAgBhC,OAAO4B,KAEvD,MACJ,IAAK,YACD,EAAKlG,SAAS,CACVuG,eAAgB,EAAKrG,MAAMqG,eAAejC,OAAO4B,OAxC9C,EAgDnBpF,WAAa,SAACsB,EAAIrB,EAAKmF,GACnB,OAAQ9D,GACJ,IAAK,WACD,EAAKpC,SAAS,CACVmG,eAAgB,EAAKjG,MAAMiG,eAAe7C,KAAI,SAACuC,EAAMW,GAAP,OAAezF,IAAQyF,EAAMN,EAAOL,OAEtF,MACJ,IAAK,OACD,EAAK7F,SAAS,CACVoG,UAAW,EAAKlG,MAAMkG,UAAU9C,KAAI,SAACuC,EAAMW,GAAP,OAAezF,IAAQyF,EAAMN,EAAOL,OAE5E,MACJ,IAAK,OACD,EAAK7F,SAAS,CACVqG,UAAW,EAAKnG,MAAMmG,UAAU/C,KAAI,SAACuC,EAAMW,GAAP,OAAezF,IAAQyF,EAAMN,EAAOL,OAE5E,MACJ,IAAK,aACD,EAAK7F,SAAS,CACVsG,gBAAiB,EAAKpG,MAAMoG,gBAAgBhD,KAAI,SAACuC,EAAMW,GAAP,OAAezF,IAAQyF,EAAMN,EAAOL,OAExF,MACJ,IAAK,YACD,EAAK7F,SAAS,CACVuG,eAAgB,EAAKrG,MAAMqG,eAAejD,KAAI,SAACuC,EAAMW,GAAP,OAAezF,IAAQyF,EAAMN,EAAOL,SAxE/E,EAgFnB3E,WAAa,SAACkB,EAAIrB,GACd,OAAQqB,GACJ,IAAK,WACD,EAAKpC,SAAS,CACVmG,eAAgB,EAAKjG,MAAMiG,eAAelC,QAAO,SAAC4B,EAAMW,GAAP,OAAezF,IAAQyF,OAE5E,MACJ,IAAK,OACD,EAAKxG,SAAS,CACVoG,UAAW,EAAKlG,MAAMkG,UAAUnC,QAAO,SAAC4B,EAAMW,GAAP,OAAezF,IAAQyF,OAElE,MACJ,IAAK,OACD,EAAKxG,SAAS,CACVqG,UAAW,EAAKnG,MAAMmG,UAAUpC,QAAO,SAAC4B,EAAMW,GAAP,OAAezF,IAAQyF,OAElE,MACJ,IAAK,aACD,EAAKxG,SAAS,CACVsG,gBAAiB,EAAKpG,MAAMoG,gBAAgBrC,QAAO,SAAC4B,EAAMW,GAAP,OAAezF,IAAQyF,OAE9E,MACJ,IAAK,YACD,EAAKxG,SAAS,CACVuG,eAAgB,EAAKrG,MAAMqG,eAAetC,QAAO,SAAC4B,EAAMW,GAAP,OAAezF,IAAQyF,SAxGrE,EAgHnB5D,oBAAsB,SAAC7B,EAAKmF,GACxB,IAAIO,EAAO,EAAKvG,MAAMkG,UAAUnC,QAAO,SAAC4B,EAAMW,GAAP,OAAezF,IAAQyF,KAG9DC,EAAK,GAAGnF,SAAW4E,EAAK5E,SACxBmF,EAAK,GAAGjF,MAAQ0E,EAAK1E,MACrBiF,EAAK,GAAG9E,IAAMuE,EAAKvE,IACnB8E,EAAK,GAAG5E,MAAQqE,EAAKrE,MACrB4E,EAAK,GAAG3E,IAAMoE,EAAKpE,IAEnB,EAAK9B,SAAS,CACVmG,eAAgB,EAAKjG,MAAMiG,eAAe7B,OAAOmC,GACjDL,UAAW,EAAKlG,MAAMkG,UAAUnC,QAAO,SAAC4B,EAAMW,GAAP,OAAezF,IAAQyF,QA5HnD,EAgInBvB,UAAY,SAACC,GACT,EAAKlF,SAAS,CACVoF,WAAYF,KAhIhB,EAAKhF,MAAQ,CACTiG,eAAgB,GAGhBC,UAAW,GAGXC,UAAW,GACXC,gBAAiB,GACjBC,eAAgB,GAChBnB,YAAY,IAAI3D,MAAOG,WAZZ,E,sEAsIT,IAAD,OACL,OACI,oCACI,kBAAC,EAAD,MACA,yBAAKQ,GAAG,mBAAmBJ,UAAU,cACjC,kBAAC,EAAD,CAAUI,GAAG,WAAWiB,MAAOpB,KAAK/B,MAAMiG,eAAgBf,WAAYnD,KAAK/B,MAAMkF,WACvEH,UAAW,SAACC,GAAD,OAAU,EAAKD,UAAUC,MAC9C,kBAAC,EAAD,CAAO9C,GAAG,QACHU,KAAK,QACLO,MAAOpB,KAAK/B,MAAMiG,eAClBf,WAAYnD,KAAK/B,MAAMkF,WACvB1C,QAAS,SAACwD,GAAD,OAAU,EAAKxD,QAAQ,WAAYwD,MAEnD,kBAAC,EAAD,CAAS9D,GAAG,OACHU,KAAK,OACLO,MAAOpB,KAAK/B,MAAMkG,UAClB1D,QAAS,SAACwD,GAAD,OAAU,EAAKxD,QAAQ,OAAQwD,IACxCpF,WAAY,SAACC,EAAKmF,GAAN,OAAe,EAAKpF,WAAW,OAAQC,EAAKmF,IACxDhF,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,OAAQH,IAC7C6B,oBAAqB,SAAC7B,EAAK0F,GAAN,OAAe,EAAK7D,oBAAoB7B,EAAK0F,MAE3E,kBAAC,EAAD,CAASrE,GAAG,OACHU,KAAK,OACLO,MAAOpB,KAAK/B,MAAMmG,UAClB3D,QAAS,SAACwD,GAAD,OAAU,EAAKxD,QAAQ,OAAQwD,IACxCpF,WAAY,SAACC,EAAKmF,GAAN,OAAe,EAAKpF,WAAW,OAAQC,EAAKmF,IACxDhF,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,OAAQH,MAEtD,kBAAC,EAAD,CAASqB,GAAG,aACHU,KAAK,aACLO,MAAOpB,KAAK/B,MAAMoG,gBAClB5D,QAAS,SAACwD,GAAD,OAAU,EAAKxD,QAAQ,aAAcwD,IAC9CpF,WAAY,SAACC,EAAKmF,GAAN,OAAe,EAAKpF,WAAW,aAAcC,EAAKmF,IAC9DhF,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,aAAcH,MAE5D,kBAAC,EAAD,CAASqB,GAAG,YACHU,KAAK,YACLO,MAAOpB,KAAK/B,MAAMqG,eAClB7D,QAAS,SAACwD,GAAD,OAAU,EAAKxD,QAAQ,YAAawD,IAC7CpF,WAAY,SAACC,EAAKmF,GAAN,OAAe,EAAKpF,WAAW,YAAaC,EAAKmF,IAC7DhF,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,YAAaH,Y,GA/K7DuB,aCjBlBoE,iBAAO,kBAAC,EAAD,MAAQhG,SAASiG,eAAe,U","file":"static/js/main.4d7f8bac.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Item extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            editMode: false,\r\n            scheduleMode: false,\r\n            // showEditGroup: false,\r\n            showOptions: false,\r\n            // showTimeGroup: false\r\n        }\r\n    }\r\n\r\n    toggleEditMode = () => {\r\n        this.setState({\r\n            editMode: !this.state.editMode\r\n        })\r\n    };\r\n\r\n    toggleScheduleMode = () => {\r\n        this.setState({\r\n            scheduleMode: !this.state.scheduleMode\r\n        })\r\n    };\r\n\r\n    toggleOptionsGroup = () => {\r\n        this.setState({\r\n            showOptions: !this.state.showOptions\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                showOptions: false\r\n            })\r\n        }, 5000)\r\n    };\r\n\r\n    updateSelf = () => {\r\n        let title = document.querySelector(`#${this.props.section}-title-edit`);\r\n        let desc = document.querySelector(`#${this.props.section}-desc-edit`);\r\n\r\n        this.props.updateItem(this.props.idx, {\r\n            title: (title.value || this.props.title),\r\n            desc: (desc.value || this.props.desc)\r\n        })\r\n    };\r\n\r\n    deleteSelf = () => {\r\n        this.props.deleteItem(this.props.idx)\r\n    };\r\n\r\n    scheduleSelf = () => {\r\n        let startTime = document.querySelector(`#${this.props.section}-start-time-edit`);\r\n        let endTime = document.querySelector(`#${this.props.section}-end-time-edit`);\r\n        let location = document.querySelector(`#${this.props.section}-loc-edit`);\r\n\r\n        if (startTime.value !== '' && endTime.value !== '' && location.value !== '') {\r\n            this.props.scheduleItem(this.props.idx, {\r\n                location: location.value,\r\n                month: new Date().getMonth(),\r\n                day: new Date().getDate(),\r\n                start: startTime.value,\r\n                end: endTime.value\r\n            });\r\n\r\n            this.deleteSelf();\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const optionsGroup = (\r\n            <div className=\"options-group\">\r\n                {this.state.showOptions ? (\r\n                    <>\r\n                        <i className=\"material-icons\" onClick={() => {\r\n                            if (this.state.scheduleMode) this.toggleScheduleMode();\r\n                            this.toggleEditMode();\r\n                            this.toggleOptionsGroup();\r\n                        }}>create</i>\r\n                        {this.props.section === 'todo' ?\r\n                            <i className=\"material-icons\" onClick={() => {\r\n                                if (this.state.editMode) this.toggleEditMode();\r\n                                this.toggleScheduleMode();\r\n                                this.toggleOptionsGroup();\r\n                            }}>calendar_today</i> : <></>\r\n                        }\r\n                        <i className=\"material-icons\" onClick={() => {\r\n                            this.deleteSelf();\r\n                            this.toggleOptionsGroup();\r\n                        }}>delete</i>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <i className=\"material-icons\" onClick={this.toggleOptionsGroup}>more_vert</i>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                <li className=\"item-group\">\r\n                    {!this.state.editMode && !this.state.scheduleMode ? (\r\n                        <h3>{this.props.title}</h3>\r\n                    ) : (<></>)}\r\n                    {this.state.editMode ? (\r\n                        <input type=\"text\" id={`${this.props.section}-title-edit`} className=\"item-title-input\"\r\n                               placeholder=\"Title\"/>\r\n                    ) : (<></>)}\r\n                    {this.state.scheduleMode ? (\r\n                        <input type=\"text\" id={`${this.props.section}-start-time-edit`} className=\"item-title-input\"\r\n                               placeholder=\"Start Time\"/>\r\n                    ) : (<></>)}\r\n                    <div className=\"item-content\">\r\n                        {!this.state.editMode && !this.state.scheduleMode ? (\r\n                            <p>{this.props.desc}</p>\r\n                        ) : (<></>)}\r\n                        {this.state.editMode ? (\r\n                            <input type=\"text\" id={`${this.props.section}-desc-edit`} className=\"item-body-input\"\r\n                                   placeholder=\"Description\"/>\r\n                        ) : (<></>)}\r\n                        {this.state.scheduleMode ? (\r\n                            <>\r\n                                <input type=\"text\" id={`${this.props.section}-end-time-edit`}\r\n                                       className=\"item-body-input\"\r\n                                       placeholder=\"End Time\"/>\r\n                                <input type=\"text\" id={`${this.props.section}-loc-edit`} className=\"item-body-input\"\r\n                                       placeholder=\"Location\"/>\r\n                            </>\r\n                        ) : (<></>)}\r\n                    </div>\r\n                    {this.state.editMode ? (\r\n                        <button onClick={() => {\r\n                            this.updateSelf();\r\n                            this.toggleEditMode();\r\n                        }}>Done</button>\r\n                    ) : (<></>)}\r\n                    {this.state.scheduleMode ? (\r\n                        <button onClick={() => {\r\n                            this.scheduleSelf();\r\n                            this.toggleScheduleMode()\r\n                        }}>Schedule</button>\r\n                    ) : (<></>)}\r\n                    {optionsGroup}\r\n                </li>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nItem.propTypes = {\r\n    section: PropTypes.string,\r\n    idx: PropTypes.number,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    month: PropTypes.string,\r\n    day: PropTypes.string,\r\n    updateItem: PropTypes.func,\r\n    deleteItem: PropTypes.func,\r\n    scheduleItem: PropTypes.func\r\n};\r\n\r\nexport default Item\r\n","import React, {Component, Fragment} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Item from \"./Item\";\r\n\r\nclass Section extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputMode: false,\r\n        }\r\n    }\r\n\r\n    toggleInputMode = () => {\r\n        this.setState({\r\n            inputMode: !this.state.inputMode\r\n        })\r\n    };\r\n\r\n    addItem = () => {\r\n        let title = document.querySelector(`#${this.props.id}-title-input`);\r\n        let desc = document.querySelector(`#${this.props.id}-desc-input`);\r\n        if (title.value !== '') this.props.addItem({\r\n            title: title.value,\r\n            desc: desc.value,\r\n            day: new Date().getDate(),\r\n            month: new Date().getMonth()\r\n        })\r\n    };\r\n\r\n    updateItem = (idx, update) => {\r\n        this.props.updateItem(idx, update)\r\n    };\r\n\r\n    deleteItem = (idx) => {\r\n        this.props.deleteItem(idx)\r\n    };\r\n\r\n    scheduleItem = (idx, update) => {\r\n        this.props.transferTaskToEvent(idx, update)\r\n    };\r\n\r\n    render() {\r\n        const sectionHeader = (\r\n            <div className=\"section-header\">\r\n                <h2>{this.props.name}</h2>\r\n                <i className=\"material-icons\" style={{fontSize: 40}} onClick={this.toggleInputMode}>\r\n                    {this.state.inputMode ? 'remove' : 'add'}\r\n                </i>\r\n            </div>\r\n        );\r\n\r\n        const sectionForm = (\r\n            <div className=\"section-input-group\">\r\n                <input type=\"text\" id={`${this.props.id}-title-input`} className=\"item-title-input\"\r\n                       placeholder=\"Click to enter title\"/>\r\n                <input type=\"text\" id={`${this.props.id}-desc-input`} className=\"item-body-input\"\r\n                       placeholder=\"Click to enter description\"/>\r\n                <button onClick={() => {\r\n                    this.addItem();\r\n                    this.toggleInputMode()\r\n                }}>\r\n                    Add\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        const sectionList = (\r\n            <ol id={`${this.props.id}-section-list`} className=\"section-list\">\r\n                {this.state.inputMode ? sectionForm : <></>}\r\n                {Object.values(this.props.items).map((val, idx) => (\r\n                    <Item key={`${this.props.id}-task-${idx}`}\r\n                          section={this.props.id}\r\n                          idx={idx}\r\n                          title={val.title}\r\n                          desc={val.desc}\r\n                          start={val.start}\r\n                          end={val.end}\r\n                          updateItem={(idx, update) => this.updateItem(idx, update)}\r\n                          deleteItem={(idx) => this.deleteItem(idx)}\r\n                          scheduleItem={(idx, update) => this.scheduleItem(idx, update)}\r\n                    />\r\n                ))}\r\n            </ol>\r\n        );\r\n\r\n        return (\r\n            <div id={`${this.props.id}-section`} className=\"section-container\">\r\n                {sectionHeader}\r\n                {sectionList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    timed: PropTypes.bool,\r\n    items: PropTypes.array,\r\n    addItem: PropTypes.func,\r\n    updateItem: PropTypes.func,\r\n    deleteItem: PropTypes.func,\r\n    transferTaskToEvent: PropTypes.func\r\n};\r\n\r\nexport default Section\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"menu-item-group\">\r\n                <h3>{this.props.name}</h3>\r\n                {Object.values(this.props.members).map(val => (\r\n                    <p>{val}</p>\r\n                ))}\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nMenuItem.propTypes = {\r\n    idx: PropTypes.number,\r\n    name: PropTypes.string,\r\n    members: PropTypes.array\r\n};\r\n\r\nexport default MenuItem\r\n","import React, {Component, Fragment} from 'react'\r\nimport MenuItem from \"./MenuItem\";\r\n\r\nconst sideMenuItems = ['Profile', 'Settings'];\r\n\r\nconst testTeam = {\r\n    name: 'Test Team',\r\n    members: ['Henry', 'John']\r\n};\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showSideMenu: false,\r\n            inputMode: false,\r\n            teams: [\r\n                // testTeam\r\n            ]\r\n        }\r\n    }\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({\r\n            showSideMenu: !this.state.showSideMenu\r\n        })\r\n    };\r\n\r\n    toggleInputMode = () => {\r\n        this.setState({\r\n            inputMode: !this.state.inputMode\r\n        })\r\n    };\r\n\r\n    addTeam = () => {\r\n        let name = document.querySelector('#team-name-input');\r\n        let members = document.querySelectorAll('input[type=\"email\"]');\r\n\r\n        // noinspection JSCheckFunctionSignatures\r\n        members = Object.values(members).filter(element => element.value !== '');\r\n\r\n        console.log(members);\r\n\r\n        if (name.value !== '') {\r\n            // noinspection JSCheckFunctionSignatures\r\n            this.setState({\r\n                teams: this.state.teams.concat({\r\n                    name: name.value,\r\n                    members: Object.values(members).map(element => element.value)\r\n                })\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const header = (name) => (\r\n            <div className=\"section-header\">\r\n                <h2>{name}</h2>\r\n                <i className=\"material-icons\" onClick={this.toggleInputMode}>\r\n                    {this.state.showTeamInputGroup ? 'remove' : 'add'}\r\n                </i>\r\n            </div>\r\n        );\r\n\r\n        const inputGroup = (\r\n            <div id=\"team-input-group\" className=\"input-group\">\r\n                <input type=\"text\" id=\"team-name-input\" placeholder=\"Team Name\" required={true}/>\r\n                <p>Invite Members</p>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <button onClick={() => {\r\n                    this.addTeam();\r\n                    this.toggleInputMode();\r\n                }}>Create\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <Fragment>\r\n                <i id=\"side-menu-btn\" className=\"material-icons\" onClick={this.toggleSideMenu}>dehaze</i>\r\n                <div id=\"side-bar\" className={this.state.showSideMenu ? 'show' : 'hide'}>\r\n                    <ul id=\"side-menu\">\r\n                        <div id=\"profile-img\"/>\r\n                        <div id=\"team-section\">\r\n                            {header('Teams')}\r\n                            {this.state.inputMode ? (inputGroup) : (\r\n                                <ol>\r\n                                    {this.state.teams.map((val, idx) => (\r\n                                        <MenuItem key={`team-${idx}`} idx={idx} name={val.name} members={val.members}/>\r\n                                    ))}\r\n                                </ol>\r\n                            )}\r\n                        </div>\r\n                        {sideMenuItems.map(val => (<li key={`${val}-side-menu-item`}><h2>{val}</h2></li>))}\r\n                    </ul>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst months = [\r\n    {\r\n        name: 'January',\r\n        days: 31\r\n    },\r\n    {\r\n        name: 'February',\r\n        days: new Date().getFullYear() % 4 === 0 ? 29 : 28\r\n    },\r\n    {\r\n        name: 'March',\r\n        days: 31\r\n    },\r\n    {\r\n        name: 'April',\r\n        days: 30\r\n    },\r\n    {\r\n        name: 'May',\r\n        days: 31\r\n    },\r\n    {\r\n        name: 'June',\r\n        days: 30\r\n    },\r\n    {\r\n        name: 'July',\r\n        days: 31\r\n    },\r\n    {\r\n        name: 'August',\r\n        days: 31\r\n    },\r\n    {\r\n        name: 'September',\r\n        days: 30\r\n    },\r\n    {\r\n        name: 'October',\r\n        days: 31\r\n    },\r\n    {\r\n        name: 'November',\r\n        days: 30\r\n    },\r\n    {\r\n        name: 'December',\r\n        days: 31\r\n    }\r\n];\r\n\r\nclass Calendar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            currentMonth: new Date().getMonth()\r\n        }\r\n    }\r\n\r\n    incrementMonth = () => {\r\n        this.setState({\r\n            currentMonth: this.state.currentMonth === 11 ? 0 : this.state.currentMonth + 1\r\n        })\r\n    };\r\n\r\n    decrementMonth = () => {\r\n        this.setState({\r\n            currentMonth: this.state.currentMonth === 0 ? 11 : this.state.currentMonth - 1\r\n        })\r\n    };\r\n\r\n    selectDay = (date) => {\r\n        this.props.selectDay(date)\r\n    };\r\n\r\n    render() {\r\n        const days = [];\r\n\r\n        const calendarHeader = (\r\n            <div id=\"calendar-header\" className=\"section-header\">\r\n                <i className=\"material-icons\" onClick={this.decrementMonth}>chevron_left</i>\r\n                <h2>{months[this.state.currentMonth].name}</h2>\r\n                <i className=\"material-icons\" onClick={this.incrementMonth}>chevron_right</i>\r\n            </div>\r\n        );\r\n\r\n        const day = (date) => (\r\n            <div key={`day-${date}`} id={`day-${date}`}\r\n                 className={`calendar-day ${this.props.currentDay === date ? 'selected' : ''}`}\r\n                 onClick={() => this.selectDay(date)}>\r\n                <p>{date}</p>\r\n            </div>\r\n        );\r\n\r\n        for (let idx = 1; idx <= months[this.state.currentMonth].days; idx++) {\r\n            days.push(day(idx))\r\n        }\r\n\r\n        const monthView = (\r\n            <div id=\"days-group\">\r\n                {days}\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div id={`${this.props.id}-section`} className=\"section-container\">\r\n                {calendarHeader}\r\n                {monthView}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCalendar.propTypes = {\r\n    id: PropTypes.string,\r\n    items: PropTypes.array,\r\n    currentDay: PropTypes.number,\r\n    selectDay: PropTypes.func\r\n};\r\n\r\nexport default Calendar\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass TodayItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected: false,\r\n            showDesc: false\r\n        }\r\n    }\r\n\r\n    toggleDesc = () => {\r\n        this.setState({\r\n            showDesc: !this.state.showDesc\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <li className=\"today-item-group\">\r\n                <h3>{this.props.title}</h3>\r\n                <p onClick={this.toggleDesc}>{this.state.showDesc ? this.props.desc : this.props.location}</p>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nTodayItem.propTypes = {\r\n    idx: PropTypes.number,\r\n    title: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    location: PropTypes.string,\r\n    month: PropTypes.string,\r\n    day: PropTypes.string,\r\n    start: PropTypes.string,\r\n    end: PropTypes.string\r\n};\r\n\r\nexport default TodayItem","import React, {Component, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodayItem from \"./TodayItem\";\r\n\r\nclass TimeBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"time-block-group\">\r\n                <p className=\"time-block-time\">{this.props.time}</p>\r\n                <div className=\"time-block-item-display\">\r\n                    {this.props.items.map(item => item.start === this.props.time ? (\r\n                        <TodayItem idx={this.props.idx}\r\n                                   title={item.title}\r\n                                   desc={item.desc}\r\n                                   location={item.location}\r\n                                   month={item.month}\r\n                                   day={item.day}\r\n                                   start={item.start}\r\n                                   end={item.end}\r\n                        />\r\n                    ) : (<></>))}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nTimeBlock.propTypes = {\r\n    idx: PropTypes.number,\r\n    time: PropTypes.string,\r\n    items: PropTypes.array\r\n};\r\n\r\nexport default TimeBlock","import React, {Component, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodayItem from \"./TodayItem\";\r\nimport TimeBlock from \"./TimeBlock\";\r\n\r\nconst times = [\r\n    '8:00',\r\n    '9:00',\r\n    '10:00',\r\n    '11:00',\r\n    '12:00',\r\n    '13:00',\r\n    '14:00',\r\n    '15:00',\r\n    '16:00',\r\n    '17:00',\r\n    '18:00',\r\n    '19:00',\r\n    '20:00'\r\n];\r\n\r\nclass Today extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            inputMode: false\r\n        }\r\n    }\r\n\r\n    toggleInputMode = () => {\r\n        this.setState({\r\n            inputMode: !this.state.inputMode\r\n        })\r\n    };\r\n\r\n    addItem = () => {\r\n        let title = document.querySelector(`#${this.props.id}-title-input`);\r\n        let desc = document.querySelector(`#${this.props.id}-desc-input`);\r\n        let loc = document.querySelector(`#${this.props.id}-loc-input`);\r\n        let start = document.querySelector(`#${this.props.id}-start-input`);\r\n        let end = document.querySelector(`#${this.props.id}-end-input`);\r\n\r\n        if (title.value !== '') this.props.addItem({\r\n            title: title.value,\r\n            desc: desc.value,\r\n            location: loc.value,\r\n            start: start.value,\r\n            end: end.value,\r\n            day: new Date().getDate(),\r\n            month: new Date().getMonth()\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const sectionHeader = (\r\n            <div className=\"section-header\">\r\n                <h2>{this.props.name}</h2>\r\n                <i className=\"material-icons\" onClick={this.toggleInputMode}>\r\n                    {this.state.inputMode ? 'remove' : 'add'}\r\n                </i>\r\n            </div>\r\n        );\r\n\r\n        const sectionForm = (\r\n            <div className=\"section-input-group\">\r\n                <input type=\"text\" id={`${this.props.id}-title-input`} className=\"item-title-input\"\r\n                       placeholder=\"Title\"/>\r\n                <input type=\"text\" id={`${this.props.id}-desc-input`} className=\"item-body-input\"\r\n                       placeholder=\"Description\"/>\r\n                <input type=\"text\" id={`${this.props.id}-loc-input`} className=\"item-body-input\"\r\n                       placeholder=\"Location\"/>\r\n                <input type=\"text\" id={`${this.props.id}-start-input`} className=\"item-body-input\"\r\n                       placeholder=\"Start time\"/>\r\n                <input type=\"text\" id={`${this.props.id}-end-input`} className=\"item-body-input\"\r\n                       placeholder=\"End time\"/>\r\n                <button onClick={() => {\r\n                    this.addItem();\r\n                    this.toggleInputMode()\r\n                }}>\r\n                    Add\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div id={`${this.props.id}-section`} className=\"section-container\">\r\n                {sectionHeader}\r\n                {this.state.inputMode ? sectionForm : (\r\n                    <div id=\"time-block-list\">\r\n                        {times.map(\r\n                            (time, idx) => <TimeBlock idx={idx} time={time} items={\r\n                                this.props.items.filter(\r\n                                    item => item.start === time && item.day === this.props.currentDay\r\n                                )\r\n                            }/>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nToday.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    items: PropTypes.array,\r\n    currentDay: PropTypes.number,\r\n    addItem: PropTypes.func\r\n};\r\n\r\nexport default Today","import React, {Component} from 'react';\r\nimport Section from \"./Section\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Calendar from \"./Calendar\";\r\nimport Today from \"./Today\";\r\n\r\nconst testTodoTask = {\r\n    title: 'Test Item',\r\n    desc: 'This is a test To-Do Item'\r\n};\r\n\r\nconst testCalendarEvent = {\r\n    title: 'Test Item',\r\n    desc: 'This is a test Calendar Event',\r\n    location: 'Victor, NY',\r\n    month: 11,\r\n    day: 8,\r\n    start: '10:00',\r\n    end: '11:00'\r\n};\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            calendarEvents: [\r\n                // testCalendarEvent\r\n            ],\r\n            todoTasks: [\r\n                // testTodoTask\r\n            ],\r\n            goalItems: [],\r\n            motivationItems: [],\r\n            happinessItems: [],\r\n            currentDay: new Date().getDate()\r\n        }\r\n    }\r\n\r\n    addItem = (id, data) => {\r\n        switch (id) {\r\n            case 'calendar':\r\n                this.setState({\r\n                    calendarEvents: this.state.calendarEvents.concat(data)\r\n                });\r\n                break;\r\n            case 'todo':\r\n                this.setState({\r\n                    todoTasks: this.state.todoTasks.concat(data)\r\n                });\r\n                break;\r\n            case 'goal':\r\n                this.setState({\r\n                    goalItems: this.state.goalItems.concat(data)\r\n                });\r\n                break;\r\n            case 'motivation':\r\n                this.setState({\r\n                    motivationItems: this.state.motivationItems.concat(data)\r\n                });\r\n                break;\r\n            case 'happiness':\r\n                this.setState({\r\n                    happinessItems: this.state.happinessItems.concat(data)\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    updateItem = (id, idx, data) => {\r\n        switch (id) {\r\n            case 'calendar':\r\n                this.setState({\r\n                    calendarEvents: this.state.calendarEvents.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'todo':\r\n                this.setState({\r\n                    todoTasks: this.state.todoTasks.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'goal':\r\n                this.setState({\r\n                    goalItems: this.state.goalItems.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'motivation':\r\n                this.setState({\r\n                    motivationItems: this.state.motivationItems.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'happiness':\r\n                this.setState({\r\n                    happinessItems: this.state.happinessItems.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    deleteItem = (id, idx) => {\r\n        switch (id) {\r\n            case 'calendar':\r\n                this.setState({\r\n                    calendarEvents: this.state.calendarEvents.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'todo':\r\n                this.setState({\r\n                    todoTasks: this.state.todoTasks.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'goal':\r\n                this.setState({\r\n                    goalItems: this.state.goalItems.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'motivation':\r\n                this.setState({\r\n                    motivationItems: this.state.motivationItems.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'happiness':\r\n                this.setState({\r\n                    happinessItems: this.state.happinessItems.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    transferTaskToEvent = (idx, data) => {\r\n        let task = this.state.todoTasks.filter((item, jdx) => idx === jdx);\r\n\r\n        // task[0].idx = idx;\r\n        task[0].location = data.location;\r\n        task[0].month = data.month;\r\n        task[0].day = data.day;\r\n        task[0].start = data.start;\r\n        task[0].end = data.end;\r\n\r\n        this.setState({\r\n            calendarEvents: this.state.calendarEvents.concat(task),\r\n            todoTasks: this.state.todoTasks.filter((item, jdx) => idx !== jdx)\r\n        })\r\n    };\r\n\r\n    selectDay = (date) => {\r\n        this.setState({\r\n            currentDay: date\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Sidebar/>\r\n                <div id=\"sections-wrapper\" className=\"day-layout\">\r\n                    <Calendar id=\"calendar\" items={this.state.calendarEvents} currentDay={this.state.currentDay}\r\n                              selectDay={(date) => this.selectDay(date)}/>\r\n                    <Today id=\"today\"\r\n                           name=\"Today\"\r\n                           items={this.state.calendarEvents}\r\n                           currentDay={this.state.currentDay}\r\n                           addItem={(data) => this.addItem('calendar', data)}\r\n                    />\r\n                    <Section id=\"todo\"\r\n                             name=\"ToDo\"\r\n                             items={this.state.todoTasks}\r\n                             addItem={(data) => this.addItem('todo', data)}\r\n                             updateItem={(idx, data) => this.updateItem('todo', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('todo', idx)}\r\n                             transferTaskToEvent={(idx, task) => this.transferTaskToEvent(idx, task)}\r\n                    />\r\n                    <Section id=\"goal\"\r\n                             name=\"Goal\"\r\n                             items={this.state.goalItems}\r\n                             addItem={(data) => this.addItem('goal', data)}\r\n                             updateItem={(idx, data) => this.updateItem('goal', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('goal', idx)}\r\n                    />\r\n                    <Section id=\"motivation\"\r\n                             name=\"Motivation\"\r\n                             items={this.state.motivationItems}\r\n                             addItem={(data) => this.addItem('motivation', data)}\r\n                             updateItem={(idx, data) => this.updateItem('motivation', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('motivation', idx)}\r\n                    />\r\n                    <Section id=\"happiness\"\r\n                             name=\"Happiness\"\r\n                             items={this.state.happinessItems}\r\n                             addItem={(data) => this.addItem('happiness', data)}\r\n                             updateItem={(idx, data) => this.updateItem('happiness', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('happiness', idx)}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport {render} from 'react-dom'\r\nimport App from \"./components/App\";\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}