{"version":3,"sources":["components/Item.js","components/Section.js","components/MenuItem.js","components/Sidebar.js","components/App.js","index.js"],"names":["Item","props","toggleEditGroup","setState","showEditGroup","state","toggleOptionsGroup","showOptions","setTimeout","toggleTimeGroup","showTimeGroup","updateSelf","name","document","querySelector","section","desc","updateItem","idx","value","deleteSelf","deleteItem","scheduleSelf","startTime","endTime","scheduleItem","start","end","optionsGroup","className","this","onClick","editGroup","id","type","placeholder","timeGroup","Component","Section","toggleAddInput","showInputGroup","addItem","day","Date","getDay","month","getMonth","update","transferTaskToEvent","sectionHeader","style","fontSize","sectionList","Object","values","items","map","val","key","sectionForm","MenuItem","members","sideMenuItems","Sidebar","toggleSideMenu","showSideMenu","toggleTeamGroup","showTeamInputGroup","addTeam","querySelectorAll","filter","element","console","log","teams","concat","inputGroup","required","App","data","calendarEvents","todoTasks","goalItems","motivationItems","happinessItems","item","jdx","task","render","getElementById"],"mappings":"sKA+JeA,E,YA3JX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAQVC,gBAAkB,WACd,EAAKC,SAAS,CACVC,eAAgB,EAAKC,MAAMD,iBAXhB,EAenBE,mBAAqB,WACjB,EAAKH,SAAS,CACVI,aAAc,EAAKF,MAAME,cAG7BC,YAAW,WACP,EAAKL,SAAS,CACVI,aAAa,MAElB,MAxBY,EA2BnBE,gBAAkB,WACd,EAAKN,SAAS,CACVO,eAAgB,EAAKL,MAAMK,iBA7BhB,EAiCnBC,WAAa,WACT,IAAIC,EAAOC,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,eACPC,EAAOH,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,eAEX,EAAKd,MAAMgB,WAAW,EAAKhB,MAAMiB,IAAK,CAClCN,KAAOA,EAAKO,OAAS,EAAKlB,MAAMW,KAChCI,KAAOA,EAAKG,OAAS,EAAKlB,MAAMe,QAvCrB,EA2CnBI,WAAa,WACT,EAAKnB,MAAMoB,WAAW,EAAKpB,MAAMiB,MA5ClB,EA+CnBI,aAAe,WACX,IAAIC,EAAYV,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,qBACZS,EAAUX,SAASC,cAAT,WAA2B,EAAKb,MAAMc,QAAtC,mBAEd,EAAKd,MAAMwB,aAAa,EAAKxB,MAAMiB,IAAK,CACpCQ,MAAOH,EAAUJ,MACjBQ,IAAKH,EAAQL,SAnDjB,EAAKd,MAAQ,CACTD,eAAe,EACfG,aAAa,EACbG,eAAe,GALJ,E,sEAyDT,IAAD,OACCkB,EACF,yBAAKC,UAAU,iBACVC,KAAKzB,MAAME,YACR,oCACI,uBAAGsB,UAAU,iBAAiBE,QAAS,WAC/B,EAAK1B,MAAMK,eAAe,EAAKD,kBACnC,EAAKP,kBACL,EAAKI,uBAHT,UAKwB,SAAvBwB,KAAK7B,MAAMc,QACR,uBAAGc,UAAU,iBAAiBE,QAAS,WAC/B,EAAK1B,MAAMD,eAAe,EAAKF,kBACnC,EAAKO,kBACL,EAAKH,uBAHT,kBAIwB,qCAE5B,uBAAGuB,UAAU,iBAAiBE,QAAS,WACnC,EAAKX,aACL,EAAKd,uBAFT,WAMJ,oCACI,uBAAGuB,UAAU,iBAAiBE,QAASD,KAAKxB,oBAA5C,eAMV0B,EACF,yBAAKC,GAAE,UAAKH,KAAK7B,MAAMc,QAAhB,eACFc,UAAS,sBAAiBC,KAAKzB,MAAMD,cAAgB,OAAS,SAC/D,2BAAO8B,KAAK,OAAOD,GAAE,UAAKH,KAAK7B,MAAMc,QAAhB,cAAqCoB,YAAY,SACtE,2BAAOD,KAAK,OAAOD,GAAE,UAAKH,KAAK7B,MAAMc,QAAhB,cAAqCoB,YAAY,gBACtE,4BAAQJ,QAAS,WACb,EAAKpB,aACL,EAAKT,oBAFT,WAQFkC,EACF,yBAAKH,GAAE,UAAKH,KAAK7B,MAAMc,QAAhB,eACFc,UAAS,8BAAyBC,KAAKzB,MAAMK,cAAgB,OAAS,SACvE,2BAAOwB,KAAK,iBAAiBD,GAAE,UAAKH,KAAK7B,MAAMc,QAAhB,sBAC/B,2BAAOmB,KAAK,iBAAiBD,GAAE,UAAKH,KAAK7B,MAAMc,QAAhB,oBAC/B,4BAAQgB,QAAS,WACb,EAAKT,eACL,EAAKF,aACL,EAAKX,oBAHT,aASR,OACI,oCACI,wBAAIoB,UAAU,cACV,4BAAKC,KAAK7B,MAAMW,MAChB,yBAAKiB,UAAU,gBACX,2BAAIC,KAAK7B,MAAMe,MACdc,KAAK7B,MAAMyB,MACR,2BAAII,KAAK7B,MAAMyB,OACf,qCACHI,KAAK7B,MAAM0B,IACR,2BAAIG,KAAK7B,MAAM0B,KACf,sCAEPC,GAGL,yBAAKC,UAAS,sBACKC,KAAKzB,MAAMD,eAAiB0B,KAAKzB,MAAMK,cAAgB,OAAS,SAE9EsB,EACAI,Q,GAvIFC,aCqGJC,E,YAnGX,WAAYrC,GAAQ,IAAD,8BACf,4CAAMA,KAMVsC,eAAiB,WACb,EAAKpC,SAAS,CACVqC,gBAAiB,EAAKnC,MAAMmC,kBATjB,EAanBC,QAAU,WACN,IAAI7B,EAAOC,SAASC,cAAT,WAA2B,EAAKb,MAAMW,KAAtC,gBACPI,EAAOH,SAASC,cAAT,WAA2B,EAAKb,MAAMW,KAAtC,gBACQ,KAAfA,EAAKO,OAAc,EAAKlB,MAAMwC,QAAQ,CACtC7B,KAAMA,EAAKO,MACXH,KAAMA,EAAKG,MACXuB,KAAK,IAAIC,MAAOC,SAChBC,OAAO,IAAIF,MAAOG,cApBP,EAwBnB7B,WAAa,SAACC,EAAK6B,GACf,EAAK9C,MAAMgB,WAAWC,EAAK6B,IAzBZ,EA4BnB1B,WAAa,SAACH,GACV,EAAKjB,MAAMoB,WAAWH,IA7BP,EAiCnBO,aAAe,SAACP,EAAK6B,GACjB,EAAK9C,MAAM+C,oBAAoB9B,EAAK6B,IAhCpC,EAAK1C,MAAQ,CACTmC,gBAAgB,GAHL,E,sEAqCT,IAAD,OACCS,EACF,yBAAKpB,UAAU,kBACX,4BAAKC,KAAK7B,MAAMW,MAChB,uBAAGiB,UAAU,iBAAiBqB,MAAO,CAACC,SAAU,IAAKpB,QAASD,KAAKS,gBAC9DT,KAAKzB,MAAMmC,eAAiB,SAAW,QAK9CY,EACF,wBAAInB,GAAE,UAAKH,KAAK7B,MAAMgC,GAAhB,iBAAmCJ,UAAU,gBAC9CwB,OAAOC,OAAOxB,KAAK7B,MAAMsD,OAAOC,KAAI,SAACC,EAAKvC,GAAN,OACjC,kBAAC,EAAD,CAAMwC,IAAG,UAAK,EAAKzD,MAAMW,KAAhB,iBAA6BM,GAChCH,QAAS,EAAKd,MAAMgC,GACpBf,IAAKA,EACLN,KAAM6C,EAAI7C,KACVI,KAAMyC,EAAIzC,KACVU,MAAO+B,EAAI/B,MACXC,IAAK8B,EAAI9B,IACTV,WAAY,SAACC,EAAK6B,GAAN,OAAiB,EAAK9B,WAAWC,EAAK6B,IAClD1B,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAWH,IACrCO,aAAc,SAACP,EAAK6B,GAAN,OAAiB,EAAKtB,aAAaP,EAAK6B,UAMlEY,EACF,yBAAK9B,UAAS,8BAAyBC,KAAKzB,MAAMmC,eAAiB,OAAS,SACxE,2BAAON,KAAK,OAAOD,GAAE,UAAKH,KAAK7B,MAAMW,KAAhB,eAAmCuB,YAAY,SACpE,2BAAOD,KAAK,OAAOD,GAAE,UAAKH,KAAK7B,MAAMW,KAAhB,eAAmCuB,YAAY,gBACpE,4BAAQJ,QAAS,WACb,EAAKU,UACL,EAAKF,mBAFT,QASR,OACI,yBAAKN,GAAE,UAAKH,KAAK7B,MAAMgC,GAAhB,YAA8BJ,UAAU,qBAC1CoB,EACAG,EACAO,O,GAnFKtB,aCyBPuB,E,YAzBX,WAAY3D,GAAQ,IAAD,8BACf,4CAAMA,KACDI,MAAQ,GAFE,E,sEAMf,OACI,yBAAKwB,UAAU,cACX,4BACI,4BAAKC,KAAK7B,MAAMW,MACfyC,OAAOC,OAAOxB,KAAK7B,MAAM4D,SAASL,KAAI,SAAAC,GAAG,OACtC,2BAAIA,Y,GAZLpB,aCAjByB,EAAgB,CAAC,UAAW,YA+FnBC,E,YA5FX,WAAY9D,GAAQ,IAAD,8BACf,4CAAMA,KAQV+D,eAAiB,WACb,EAAK7D,SAAS,CACV8D,cAAe,EAAK5D,MAAM4D,gBAXf,EAenBC,gBAAkB,WACd,EAAK/D,SAAS,CACVgE,oBAAqB,EAAK9D,MAAM8D,sBAjBrB,EAqBnBC,QAAU,WACN,IAAIxD,EAAOC,SAASC,cAAc,oBAC9B+C,EAAUhD,SAASwD,iBAAiB,uBAGxCR,EAAUR,OAAOC,OAAOO,GAASS,QAAO,SAAAC,GAAO,MAAsB,KAAlBA,EAAQpD,SAE3DqD,QAAQC,IAAIZ,GAEO,KAAfjD,EAAKO,OAEL,EAAKhB,SAAS,CACVuE,MAAO,EAAKrE,MAAMqE,MAAMC,OAAO,CAC3B/D,KAAMA,EAAKO,MACX0C,QAASR,OAAOC,OAAOO,GAASL,KAAI,SAAAe,GAAO,OAAIA,EAAQpD,cAjCnE,EAAKd,MAAQ,CACT4D,cAAc,EACdE,oBAAoB,EACpBO,MAAO,IALI,E,sEAyCT,IACqB9D,EADtB,OAUCgE,EACF,yBAAK3C,GAAG,mBAAmBJ,UAAS,sBAAiBC,KAAKzB,MAAM8D,mBAAqB,OAAS,SAC1F,2BAAOjC,KAAK,OAAOD,GAAG,kBAAkBE,YAAY,YAAY0C,UAAU,IAC1E,6CACA,2BAAO3C,KAAK,QAAQD,GAAG,qBAAqBE,YAAY,aACxD,2BAAOD,KAAK,QAAQD,GAAG,qBAAqBE,YAAY,aACxD,2BAAOD,KAAK,QAAQD,GAAG,qBAAqBE,YAAY,aACxD,2BAAOD,KAAK,QAAQD,GAAG,qBAAqBE,YAAY,aACxD,4BAAQJ,QAAS,WACb,EAAKqC,UACL,EAAKF,oBAFT,WAQR,OACI,kBAAC,WAAD,KACI,uBAAGjC,GAAG,gBAAgBJ,UAAU,iBAAiBE,QAASD,KAAKkC,gBAA/D,UACA,yBAAK/B,GAAG,WAAWJ,UAAWC,KAAKzB,MAAM4D,aAAe,OAAS,QAC7D,wBAAIhC,GAAG,aACH,yBAAKA,GAAG,gBACR,yBAAKA,GAAG,iBA/BGrB,EAgCY,QA/BnC,yBAAKiB,UAAU,kBACX,4BAAKjB,GACL,uBAAGiB,UAAU,iBAAiBE,QAAS,EAAKmC,iBACvC,EAAK7D,MAAM8D,mBAAqB,SAAW,SA6BpC,4BACKd,OAAOC,OAAOxB,KAAKzB,MAAMqE,OAAOlB,KAAI,SAACC,EAAKvC,GAAN,OACjC,kBAAC,EAAD,CAAUwC,IAAG,eAAUxC,GAAOA,IAAKA,EAAKN,KAAM6C,EAAI7C,KAAMiD,QAASJ,EAAII,cAG5Ee,GAEJvB,OAAOC,OAAOQ,GAAeN,KAAI,SAAAC,GAAG,OACjC,wBAAIC,IAAG,UAAKD,EAAL,oBAA2B,4BAAKA,c,GApF7CpB,aCoLPyC,E,YA/KX,WAAY7E,GAAQ,IAAD,8BACf,4CAAMA,KAYVwC,QAAU,SAACR,EAAI8C,GACX,OAAQ9C,GACJ,IAAK,WACD,EAAK9B,SAAS,CACV6E,eAAgB,EAAK3E,MAAM2E,eAAeL,OAAOI,KAErD,MACJ,IAAK,OACD,EAAK5E,SAAS,CACV8E,UAAW,EAAK5E,MAAM4E,UAAUN,OAAOI,KAE3C,MACJ,IAAK,OACD,EAAK5E,SAAS,CACV+E,UAAW,EAAK7E,MAAM6E,UAAUP,OAAOI,KAE3C,MACJ,IAAK,aACD,EAAK5E,SAAS,CACVgF,gBAAiB,EAAK9E,MAAM8E,gBAAgBR,OAAOI,KAEvD,MACJ,IAAK,YACD,EAAK5E,SAAS,CACViF,eAAgB,EAAK/E,MAAM+E,eAAeT,OAAOI,OArC9C,EA6CnB9D,WAAa,SAACgB,EAAIf,EAAK6D,GACnB,OAAQ9C,GACJ,IAAK,WACD,EAAK9B,SAAS,CACV6E,eAAgB,EAAK3E,MAAM2E,eAAexB,KAAI,SAAC6B,EAAMC,GAAP,OAAepE,IAAQoE,EAAMP,EAAOM,OAEtF,MACJ,IAAK,OACD,EAAKlF,SAAS,CACV8E,UAAW,EAAK5E,MAAM4E,UAAUzB,KAAI,SAAC6B,EAAMC,GAAP,OAAepE,IAAQoE,EAAMP,EAAOM,OAE5E,MACJ,IAAK,OACD,EAAKlF,SAAS,CACV+E,UAAW,EAAK7E,MAAM6E,UAAU1B,KAAI,SAAC6B,EAAMC,GAAP,OAAepE,IAAQoE,EAAMP,EAAOM,OAE5E,MACJ,IAAK,aACD,EAAKlF,SAAS,CACVgF,gBAAiB,EAAK9E,MAAM8E,gBAAgB3B,KAAI,SAAC6B,EAAMC,GAAP,OAAepE,IAAQoE,EAAMP,EAAOM,OAExF,MACJ,IAAK,YACD,EAAKlF,SAAS,CACViF,eAAgB,EAAK/E,MAAM+E,eAAe5B,KAAI,SAAC6B,EAAMC,GAAP,OAAepE,IAAQoE,EAAMP,EAAOM,SArE/E,EA6EnBhE,WAAa,SAACY,EAAIf,GACd,OAAQe,GACJ,IAAK,WACD,EAAK9B,SAAS,CACV6E,eAAgB,EAAK3E,MAAM2E,eAAeV,QAAO,SAACe,EAAMC,GAAP,OAAepE,IAAQoE,OAE5E,MACJ,IAAK,OACD,EAAKnF,SAAS,CACV8E,UAAW,EAAK5E,MAAM4E,UAAUX,QAAO,SAACe,EAAMC,GAAP,OAAepE,IAAQoE,OAElE,MACJ,IAAK,OACD,EAAKnF,SAAS,CACV+E,UAAW,EAAK7E,MAAM6E,UAAUZ,QAAO,SAACe,EAAMC,GAAP,OAAepE,IAAQoE,OAElE,MACJ,IAAK,aACD,EAAKnF,SAAS,CACVgF,gBAAiB,EAAK9E,MAAM8E,gBAAgBb,QAAO,SAACe,EAAMC,GAAP,OAAepE,IAAQoE,OAE9E,MACJ,IAAK,YACD,EAAKnF,SAAS,CACViF,eAAgB,EAAK/E,MAAM+E,eAAed,QAAO,SAACe,EAAMC,GAAP,OAAepE,IAAQoE,SArGrE,EA6GnBtC,oBAAsB,SAAC9B,EAAK6D,GACxB,IAAIQ,EAAO,EAAKlF,MAAM4E,UAAUX,QAAO,SAACe,EAAMC,GAAP,OAAepE,IAAQoE,KAE9DC,EAAK,GAAG7D,MAAQqD,EAAKrD,MACrB6D,EAAK,GAAG5D,IAAMoD,EAAKpD,IAEnB,EAAKxB,SAAS,CACV6E,eAAgB,EAAK3E,MAAM2E,eAAeL,OAAOY,GACjDN,UAAW,EAAK5E,MAAM4E,UAAUX,QAAO,SAACe,EAAMC,GAAP,OAAepE,IAAQoE,QAnHlE,EAAKjF,MAAQ,CACT2E,eAAgB,GAChBC,UAAW,GAGXC,UAAW,GACXC,gBAAiB,GACjBC,eAAgB,IATL,E,sEAyHT,IAAD,OACL,OACI,oCACI,kBAAC,EAAD,MACA,yBAAKnD,GAAG,mBAAmBJ,UAAU,cACjC,kBAAC,EAAD,CAASI,GAAG,WACHrB,KAAK,WACL2C,MAAOzB,KAAKzB,MAAM2E,eAClBvC,QAAS,SAACsC,GAAD,OAAU,EAAKtC,QAAQ,WAAYsC,IAC5C9D,WAAY,SAACC,EAAK6D,GAAN,OAAe,EAAK9D,WAAW,WAAYC,EAAK6D,IAC5D1D,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,WAAYH,MAE1D,kBAAC,EAAD,CAASe,GAAG,QACHrB,KAAK,QACL2C,MAAOzB,KAAKzB,MAAM2E,eAClBvC,QAAS,SAACsC,GAAD,OAAU,EAAKtC,QAAQ,WAAYsC,IAC5C9D,WAAY,SAACC,EAAK6D,GAAN,OAAe,EAAK9D,WAAW,WAAYC,EAAK6D,IAC5D1D,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,WAAYH,MAE1D,kBAAC,EAAD,CAASe,GAAG,OACHrB,KAAK,OACL2C,MAAOzB,KAAKzB,MAAM4E,UAClBxC,QAAS,SAACsC,GAAD,OAAU,EAAKtC,QAAQ,OAAQsC,IACxC9D,WAAY,SAACC,EAAK6D,GAAN,OAAe,EAAK9D,WAAW,OAAQC,EAAK6D,IACxD1D,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,OAAQH,IAC7C8B,oBAAqB,SAAC9B,EAAKqE,GAAN,OAAe,EAAKvC,oBAAoB9B,EAAKqE,MAE3E,kBAAC,EAAD,CAAStD,GAAG,OACHrB,KAAK,OACL2C,MAAOzB,KAAKzB,MAAM6E,UAClBzC,QAAS,SAACsC,GAAD,OAAU,EAAKtC,QAAQ,OAAQsC,IACxC9D,WAAY,SAACC,EAAK6D,GAAN,OAAe,EAAK9D,WAAW,OAAQC,EAAK6D,IACxD1D,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,OAAQH,MAEtD,kBAAC,EAAD,CAASe,GAAG,aACHrB,KAAK,aACL2C,MAAOzB,KAAKzB,MAAM8E,gBAClB1C,QAAS,SAACsC,GAAD,OAAU,EAAKtC,QAAQ,aAAcsC,IAC9C9D,WAAY,SAACC,EAAK6D,GAAN,OAAe,EAAK9D,WAAW,aAAcC,EAAK6D,IAC9D1D,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,aAAcH,MAE5D,kBAAC,EAAD,CAASe,GAAG,YACHrB,KAAK,YACL2C,MAAOzB,KAAKzB,MAAM+E,eAClB3C,QAAS,SAACsC,GAAD,OAAU,EAAKtC,QAAQ,YAAasC,IAC7C9D,WAAY,SAACC,EAAK6D,GAAN,OAAe,EAAK9D,WAAW,YAAaC,EAAK6D,IAC7D1D,WAAY,SAACH,GAAD,OAAS,EAAKG,WAAW,YAAaH,Y,GAxK7DmB,aCLlBmD,iBAAO,kBAAC,EAAD,MAAQ3E,SAAS4E,eAAe,U","file":"static/js/main.9105773d.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Item extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showEditGroup: false,\r\n            showOptions: false,\r\n            showTimeGroup: false\r\n        }\r\n    }\r\n\r\n    toggleEditGroup = () => {\r\n        this.setState({\r\n            showEditGroup: !this.state.showEditGroup\r\n        })\r\n    };\r\n\r\n    toggleOptionsGroup = () => {\r\n        this.setState({\r\n            showOptions: !this.state.showOptions\r\n        });\r\n\r\n        setTimeout(() => {\r\n            this.setState({\r\n                showOptions: false\r\n            })\r\n        }, 5000)\r\n    };\r\n\r\n    toggleTimeGroup = () => {\r\n        this.setState({\r\n            showTimeGroup: !this.state.showTimeGroup\r\n        })\r\n    };\r\n\r\n    updateSelf = () => {\r\n        let name = document.querySelector(`#${this.props.section}-name-edit`);\r\n        let desc = document.querySelector(`#${this.props.section}-desc-edit`);\r\n\r\n        this.props.updateItem(this.props.idx, {\r\n            name: (name.value || this.props.name),\r\n            desc: (desc.value || this.props.desc)\r\n        })\r\n    };\r\n\r\n    deleteSelf = () => {\r\n        this.props.deleteItem(this.props.idx)\r\n    };\r\n\r\n    scheduleSelf = () => {\r\n        let startTime = document.querySelector(`#${this.props.section}-start-time-edit`);\r\n        let endTime = document.querySelector(`#${this.props.section}-end-time-edit`);\r\n\r\n        this.props.scheduleItem(this.props.idx, {\r\n            start: startTime.value,\r\n            end: endTime.value\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const optionsGroup = (\r\n            <div className=\"options-group\">\r\n                {this.state.showOptions ? (\r\n                    <>\r\n                        <i className=\"material-icons\" onClick={() => {\r\n                            if (this.state.showTimeGroup) this.toggleTimeGroup();\r\n                            this.toggleEditGroup();\r\n                            this.toggleOptionsGroup();\r\n                        }}>create</i>\r\n                        {this.props.section === 'todo' ?\r\n                            <i className=\"material-icons\" onClick={() => {\r\n                                if (this.state.showEditGroup) this.toggleEditGroup();\r\n                                this.toggleTimeGroup();\r\n                                this.toggleOptionsGroup();\r\n                            }}>calendar_today</i> : <></>\r\n                        }\r\n                        <i className=\"material-icons\" onClick={() => {\r\n                            this.deleteSelf();\r\n                            this.toggleOptionsGroup();\r\n                        }}>delete</i>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <i className=\"material-icons\" onClick={this.toggleOptionsGroup}>more_vert</i>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n        const editGroup = (\r\n            <div id={`${this.props.section}-edit-group`}\r\n                 className={`input-group ${this.state.showEditGroup ? 'show' : 'hide'}`}>\r\n                <input type=\"text\" id={`${this.props.section}-name-edit`} placeholder=\"Name\"/>\r\n                <input type=\"text\" id={`${this.props.section}-desc-edit`} placeholder=\"Description\"/>\r\n                <button onClick={() => {\r\n                    this.updateSelf();\r\n                    this.toggleEditGroup()\r\n                }}>Change\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        const timeGroup = (\r\n            <div id={`${this.props.section}-time-group`}\r\n                 className={`section-input-group ${this.state.showTimeGroup ? 'show' : 'hide'}`}>\r\n                <input type=\"datetime-local\" id={`${this.props.section}-start-time-edit`}/>\r\n                <input type=\"datetime-local\" id={`${this.props.section}-end-time-edit`}/>\r\n                <button onClick={() => {\r\n                    this.scheduleSelf();\r\n                    this.deleteSelf();\r\n                    this.toggleTimeGroup()\r\n                }}>Schedule\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <>\r\n                <li className=\"item-group\">\r\n                    <h3>{this.props.name}</h3>\r\n                    <div className=\"item-content\">\r\n                        <p>{this.props.desc}</p>\r\n                        {this.props.start ? (\r\n                            <p>{this.props.start}</p>\r\n                        ) : <></>}\r\n                        {this.props.end ? (\r\n                            <p>{this.props.end}</p>\r\n                        ) : <></>}\r\n                    </div>\r\n                    {optionsGroup}\r\n                </li>\r\n                {/* Migrate to Section */}\r\n                <div className={\r\n                    `input-group ${this.state.showEditGroup || this.state.showTimeGroup ? 'show' : 'hide'}`\r\n                }>\r\n                    {editGroup}\r\n                    {timeGroup}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nItem.propTypes = {\r\n    section: PropTypes.string,\r\n    idx: PropTypes.number,\r\n    name: PropTypes.string,\r\n    desc: PropTypes.string,\r\n    month: PropTypes.string,\r\n    day: PropTypes.string,\r\n    start: PropTypes.string,\r\n    end: PropTypes.string,\r\n    updateItem: PropTypes.func,\r\n    deleteItem: PropTypes.func,\r\n    scheduleItem: PropTypes.func\r\n};\r\n\r\nexport default Item\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Item from \"./Item\";\r\n\r\nclass Section extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showInputGroup: false,\r\n        }\r\n    }\r\n\r\n    toggleAddInput = () => {\r\n        this.setState({\r\n            showInputGroup: !this.state.showInputGroup\r\n        })\r\n    };\r\n\r\n    addItem = () => {\r\n        let name = document.querySelector(`#${this.props.name}-name-input`);\r\n        let desc = document.querySelector(`#${this.props.name}-desc-input`);\r\n        if (name.value !== '') this.props.addItem({\r\n            name: name.value,\r\n            desc: desc.value,\r\n            day: new Date().getDay(),\r\n            month: new Date().getMonth()\r\n        })\r\n    };\r\n\r\n    updateItem = (idx, update) => {\r\n        this.props.updateItem(idx, update)\r\n    };\r\n\r\n    deleteItem = (idx) => {\r\n        this.props.deleteItem(idx)\r\n    };\r\n\r\n    // todo - Verify data transfer to root component (App)\r\n    scheduleItem = (idx, update) => {\r\n        this.props.transferTaskToEvent(idx, update)\r\n    };\r\n\r\n    render() {\r\n        const sectionHeader = (\r\n            <div className=\"section-header\">\r\n                <h2>{this.props.name}</h2>\r\n                <i className=\"material-icons\" style={{fontSize: 40}} onClick={this.toggleAddInput}>\r\n                    {this.state.showInputGroup ? 'remove' : 'add'}\r\n                </i>\r\n            </div>\r\n        );\r\n\r\n        const sectionList = (\r\n            <ol id={`${this.props.id}-section-list`} className=\"section-list\">\r\n                {Object.values(this.props.items).map((val, idx) => (\r\n                    <Item key={`${this.props.name}-task-${idx}`}\r\n                          section={this.props.id}\r\n                          idx={idx}\r\n                          name={val.name}\r\n                          desc={val.desc}\r\n                          start={val.start}\r\n                          end={val.end}\r\n                          updateItem={(idx, update) => this.updateItem(idx, update)}\r\n                          deleteItem={(idx) => this.deleteItem(idx)}\r\n                          scheduleItem={(idx, update) => this.scheduleItem(idx, update)}\r\n                    />\r\n                ))}\r\n            </ol>\r\n        );\r\n\r\n        const sectionForm = (\r\n            <div className={`section-input-group ${this.state.showInputGroup ? 'show' : 'hide'}`}>\r\n                <input type=\"text\" id={`${this.props.name}-name-input`} placeholder=\"Name\"/>\r\n                <input type=\"text\" id={`${this.props.name}-desc-input`} placeholder=\"Description\"/>\r\n                <button onClick={() => {\r\n                    this.addItem();\r\n                    this.toggleAddInput()\r\n                }}>\r\n                    Add\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <div id={`${this.props.id}-section`} className=\"section-container\">\r\n                {sectionHeader}\r\n                {sectionList}\r\n                {sectionForm}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSection.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    timed: PropTypes.bool,\r\n    items: PropTypes.array,\r\n    addItem: PropTypes.func,\r\n    updateItem: PropTypes.func,\r\n    deleteItem: PropTypes.func,\r\n    transferTaskToEvent: PropTypes.func\r\n};\r\n\r\nexport default Section\r\n","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass MenuItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"item-group\">\r\n                <li>\r\n                    <h3>{this.props.name}</h3>\r\n                    {Object.values(this.props.members).map(val => (\r\n                        <p>{val}</p>\r\n                    ))}\r\n                </li>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMenuItem.propTypes = {\r\n    idx: PropTypes.number,\r\n    name: PropTypes.string,\r\n    members: PropTypes.array\r\n};\r\n\r\nexport default MenuItem\r\n","import React, {Component, Fragment} from 'react'\r\nimport MenuItem from \"./MenuItem\";\r\n\r\nconst sideMenuItems = ['Profile', 'Settings'];\r\n\r\nclass Sidebar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showSideMenu: false,\r\n            showTeamInputGroup: false,\r\n            teams: []\r\n        }\r\n    }\r\n\r\n    toggleSideMenu = () => {\r\n        this.setState({\r\n            showSideMenu: !this.state.showSideMenu\r\n        })\r\n    };\r\n\r\n    toggleTeamGroup = () => {\r\n        this.setState({\r\n            showTeamInputGroup: !this.state.showTeamInputGroup\r\n        })\r\n    };\r\n\r\n    addTeam = () => {\r\n        let name = document.querySelector('#team-name-input');\r\n        let members = document.querySelectorAll('input[type=\"email\"]');\r\n\r\n        // noinspection JSCheckFunctionSignatures\r\n        members = Object.values(members).filter(element => element.value !== '');\r\n\r\n        console.log(members);\r\n\r\n        if (name.value !== '') {\r\n            // noinspection JSCheckFunctionSignatures\r\n            this.setState({\r\n                teams: this.state.teams.concat({\r\n                    name: name.value,\r\n                    members: Object.values(members).map(element => element.value)\r\n                })\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const menuSectionHeader = (name) => (\r\n            <div className=\"section-header\">\r\n                <h2>{name}</h2>\r\n                <i className=\"material-icons\" onClick={this.toggleTeamGroup}>\r\n                    {this.state.showTeamInputGroup ? 'remove' : 'add'}\r\n                </i>\r\n            </div>\r\n        );\r\n\r\n        const inputGroup = (\r\n            <div id=\"team-input-group\" className={`input-group ${this.state.showTeamInputGroup ? 'show' : 'hide'}`}>\r\n                <input type=\"text\" id=\"team-name-input\" placeholder=\"Team Name\" required={true}/>\r\n                <p>Invite Members</p>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <input type=\"email\" id=\"team-email-input-1\" placeholder=\"Member 1\"/>\r\n                <button onClick={() => {\r\n                    this.addTeam();\r\n                    this.toggleTeamGroup();\r\n                }}>Create\r\n                </button>\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <Fragment>\r\n                <i id=\"side-menu-btn\" className=\"material-icons\" onClick={this.toggleSideMenu}>dehaze</i>\r\n                <div id=\"side-bar\" className={this.state.showSideMenu ? 'show' : 'hide'}>\r\n                    <ul id=\"side-menu\">\r\n                        <div id=\"profile-img\"/>\r\n                        <div id=\"team-section\">\r\n                            {menuSectionHeader('Teams')}\r\n                            <ol>\r\n                                {Object.values(this.state.teams).map((val, idx) => (\r\n                                    <MenuItem key={`team-${idx}`} idx={idx} name={val.name} members={val.members}/>\r\n                                ))}\r\n                            </ol>\r\n                            {inputGroup}\r\n                        </div>\r\n                        {Object.values(sideMenuItems).map(val => (\r\n                            <li key={`${val}-side-menu-item`}><h2>{val}</h2></li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, {Component} from 'react';\r\nimport Section from \"./Section\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\nconst testItem = {\r\n    name: 'Test Item',\r\n    desc: 'This is a test To-Do Item'\r\n};\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            calendarEvents: [],\r\n            todoTasks: [\r\n                // testItem\r\n            ],\r\n            goalItems: [],\r\n            motivationItems: [],\r\n            happinessItems: []\r\n        }\r\n    }\r\n\r\n    addItem = (id, data) => {\r\n        switch (id) {\r\n            case 'calendar':\r\n                this.setState({\r\n                    calendarEvents: this.state.calendarEvents.concat(data)\r\n                });\r\n                break;\r\n            case 'todo':\r\n                this.setState({\r\n                    todoTasks: this.state.todoTasks.concat(data)\r\n                });\r\n                break;\r\n            case 'goal':\r\n                this.setState({\r\n                    goalItems: this.state.goalItems.concat(data)\r\n                });\r\n                break;\r\n            case 'motivation':\r\n                this.setState({\r\n                    motivationItems: this.state.motivationItems.concat(data)\r\n                });\r\n                break;\r\n            case 'happiness':\r\n                this.setState({\r\n                    happinessItems: this.state.happinessItems.concat(data)\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    updateItem = (id, idx, data) => {\r\n        switch (id) {\r\n            case 'calendar':\r\n                this.setState({\r\n                    calendarEvents: this.state.calendarEvents.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'todo':\r\n                this.setState({\r\n                    todoTasks: this.state.todoTasks.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'goal':\r\n                this.setState({\r\n                    goalItems: this.state.goalItems.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'motivation':\r\n                this.setState({\r\n                    motivationItems: this.state.motivationItems.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            case 'happiness':\r\n                this.setState({\r\n                    happinessItems: this.state.happinessItems.map((item, jdx) => idx === jdx ? data : item)\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    deleteItem = (id, idx) => {\r\n        switch (id) {\r\n            case 'calendar':\r\n                this.setState({\r\n                    calendarEvents: this.state.calendarEvents.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'todo':\r\n                this.setState({\r\n                    todoTasks: this.state.todoTasks.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'goal':\r\n                this.setState({\r\n                    goalItems: this.state.goalItems.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'motivation':\r\n                this.setState({\r\n                    motivationItems: this.state.motivationItems.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            case 'happiness':\r\n                this.setState({\r\n                    happinessItems: this.state.happinessItems.filter((item, jdx) => idx !== jdx)\r\n                });\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    };\r\n\r\n    transferTaskToEvent = (idx, data) => {\r\n        let task = this.state.todoTasks.filter((item, jdx) => idx === jdx);\r\n\r\n        task[0].start = data.start;\r\n        task[0].end = data.end;\r\n\r\n        this.setState({\r\n            calendarEvents: this.state.calendarEvents.concat(task),\r\n            todoTasks: this.state.todoTasks.filter((item, jdx) => idx !== jdx)\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Sidebar/>\r\n                <div id=\"sections-wrapper\" className=\"day-layout\">\r\n                    <Section id=\"calender\"\r\n                             name=\"Calendar\"\r\n                             items={this.state.calendarEvents}\r\n                             addItem={(data) => this.addItem('calendar', data)}\r\n                             updateItem={(idx, data) => this.updateItem('calendar', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('calendar', idx)}\r\n                    />\r\n                    <Section id=\"today\"\r\n                             name=\"Today\"\r\n                             items={this.state.calendarEvents}\r\n                             addItem={(data) => this.addItem('calendar', data)}\r\n                             updateItem={(idx, data) => this.updateItem('calendar', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('calendar', idx)}\r\n                    />\r\n                    <Section id=\"todo\"\r\n                             name=\"ToDo\"\r\n                             items={this.state.todoTasks}\r\n                             addItem={(data) => this.addItem('todo', data)}\r\n                             updateItem={(idx, data) => this.updateItem('todo', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('todo', idx)}\r\n                             transferTaskToEvent={(idx, task) => this.transferTaskToEvent(idx, task)}\r\n                    />\r\n                    <Section id=\"goal\"\r\n                             name=\"Goal\"\r\n                             items={this.state.goalItems}\r\n                             addItem={(data) => this.addItem('goal', data)}\r\n                             updateItem={(idx, data) => this.updateItem('goal', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('goal', idx)}\r\n                    />\r\n                    <Section id=\"motivation\"\r\n                             name=\"Motivation\"\r\n                             items={this.state.motivationItems}\r\n                             addItem={(data) => this.addItem('motivation', data)}\r\n                             updateItem={(idx, data) => this.updateItem('motivation', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('motivation', idx)}\r\n                    />\r\n                    <Section id=\"happiness\"\r\n                             name=\"Happiness\"\r\n                             items={this.state.happinessItems}\r\n                             addItem={(data) => this.addItem('happiness', data)}\r\n                             updateItem={(idx, data) => this.updateItem('happiness', idx, data)}\r\n                             deleteItem={(idx) => this.deleteItem('happiness', idx)}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport {render} from 'react-dom'\r\nimport App from \"./components/App\";\r\n\r\nrender(<App/>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}